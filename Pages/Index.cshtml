@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

    <script>
    function init() {
        // Initialize Firebase.
        // TODO: replace with your Firebase project configuration.
        var config = {
            apiKey: '',
            authDomain: "",
            databaseURL: ""
        };
        firebase.initializeApp(config);

        // Get Firebase Database reference.
        var firepadRef = getExampleRef();

        // Create CodeMirror (with lineWrapping on).
        var codeMirror = CodeMirror(document.getElementById('firepad'), { lineWrapping: true });

        // Create a random ID to use as our user ID (we must give this to firepad and FirepadUserList).
        var userId = Math.floor(Math.random() * 9999999999).toString();

        // Create Firepad (with rich text features and our desired userId).
        var firepad = Firepad.fromCodeMirror(firepadRef, codeMirror,
            { richTextToolbar: true, richTextShortcuts: true, userId: userId });

        // Create FirepadUserList (with our desired userId).
        var firepadUserList = FirepadUserList.fromDiv(firepadRef.child('users'),
            document.getElementById('userlist'), userId);

        // Initialize contents.
        firepad.on('ready', function () {
            if (firepad.isHistoryEmpty()) {
                var documentContent = '@Model.DocumentContent';
                if (documentContent.length != 0) {
                    firepad.setHtml(htmlDecode(documentContent));
                } else {
                    firepad.setText("Welcome to your own private pad! Share the URL above and collaborate with your friends.");
                }
            }
        });

        firepad.on('synced', function (isSynced) {
            // isSynced will be false immediately after the user edits
            // the pad, and true when their edit has been saved to Firebase.
            if (isSynced) {
                document.getElementById("DocumentContent").value = firepad.getHtml();
            }
        });

        document.getElementById("shareURL").value = window.location.origin + window.location.pathname + window.location.hash;
    }

    // Helper to get hash from end of URL or generate a random one.
    function getExampleRef() {
        var ref = firebase.database().ref();
        var hash = window.location.hash.replace(/#/g, '');
        if (hash) {
            ref = ref.child(hash);
        } else {
            ref = ref.push(); // generate unique location.

            window.location = window.location + '#' + ref.key; // add it as a hash to the URL.
        }
        if (typeof console !== 'undefined') {
            console.log('Firebase data: ', ref.toString());
        }
        return ref;
    }

    function htmlDecode(input) {
        var e = document.createElement('div');
        e.innerHTML = input;
        return e.childNodes[0].nodeValue;
    }

    </script>

<form method="post" enctype="multipart/form-data" id="uploadForm">
    <input asp-for="UploadedDocument" />

    <input type="submit" value="Upload Document" class="btn btn-primary" asp-page-handler="UploadDocument" />
    <input type="submit" value="Download Document" class="btn btn-primary" asp-page-handler="DownloadDocument" />

    <input asp-for="DocumentContent" type="hidden" />
</form>

<div>
    <strong>
        <label for="shareURL">Edit with Friends: </label>
    </strong>
    <input type="text" name="shareURL" id="shareURL" size="50">
</div>

<div id="userlist"></div>
<div id="firepad"></div>